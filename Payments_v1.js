//**********************************************************
//**********************************************************
"use strict";

//**********************************************************

//======================================================
//–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
//======================================================

//–ò–∫–æ–Ω–∫–∏ —Ç–∏–ø–∞
const ICO_PLUS = "‚ûï";
const ICO_MINUS = "‚ûñ";
const ICO_TRANSACTION = "üí±";

//–ò–∫–æ–Ω–∫–∏ –ø—Ä–∏—Ö–æ–¥–∞
const ICO_SALARY = "üíµ";
const ICO_ADD_INCOME = "üí∏";

//–ò–∫–æ–Ω–∫–∏ —Ä–∞—Å—Ö–æ–¥–∞
const ICO_FOOD = "üçú";
const ICO_SERVICE = "üè†";
const ICO_TRANSPORT = "üöå";
const ICO_REST = "üßòüèº‚Äç‚ôÄÔ∏è";
const ICO_THINGS = "üì¶";
const ICO_HEALTH = "üè•";

//–û–±—â–∏–µ –∏–∫–æ–Ω–∫–∏ –ø—Ä–∏—Ö–æ–¥–∞ –∏ —Ä–∞—Å—Ö–æ–¥–∞
const ICO_CORRECTION = "üßÆ";
const ICO_OTHER = "üè∑Ô∏è";

//–ò–º–µ–Ω–∞ –ø–æ–ª–µ–π –∏ –∑–Ω–∞—á–µ–Ω–∏—è
const DATE = "–î–∞—Ç–∞";
const TYPE = "–¢–∏–ø";
	const _INCOME = ICO_PLUS + " –ø—Ä–∏—Ö–æ–¥";
	const _OUTCOME = ICO_MINUS + " —Ä–∞—Å—Ö–æ–¥";
	const _TRANSACTION = ICO_TRANSACTION + " –ø–µ—Ä–µ–≤–æ–¥";
const ACCOUNT = "–°—á—ë—Ç";
const DESTINATION = "–ü–µ—Ä–µ–≤–µ–ª–µ–Ω–æ –Ω–∞";	

const INCOME_CATEGORY = "–ö–∞—Ç–µ–≥–æ—Ä–∏—è " + ICO_PLUS;
	const _SALARY = ICO_SALARY + " –∑–∞—Ä–ø–ª–∞—Ç–∞";
	const _ADD_INCOME = ICO_ADD_INCOME + " –¥–æ–ø.–¥–æ—Ö–æ–¥";
const INCOME = "–ü—Ä–∏—Ö–æ–¥";

const OUTCOME_CATEGORY = "–ö–∞—Ç–µ–≥–æ—Ä–∏—è " + ICO_MINUS;
	const FOOD = ICO_FOOD + " –ø–∏—Ç–∞–Ω–∏–µ";
	const _SERVICE = ICO_SERVICE + " —Å–æ—Ü.—É—Å–ª—É–≥–∏";
	const _TRANSPORT = ICO_TRANSPORT + " —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç";
	const _REST = ICO_REST + " –¥–æ—Å—É–≥";
	const _THINGS = ICO_THINGS + " –≤–µ—â–∏";
	const _HEALTH = ICO_HEALTH + " –∑–¥–æ—Ä–æ–≤—å–µ";
const OUTCOME = "–†–∞—Å—Ö–æ–¥";

	const _CORRECTION = ICO_CORRECTION + " –∫–æ—Ä—Ä–µ–∫—Ç.";
	const _OTHER = ICO_OTHER + " –ø—Ä–æ—á–µ–µ";

const TRANSACTION = "–°—É–º–º–∞ –ø–µ—Ä–µ–≤–æ–¥–∞";
const NAME = "–ù–∞–∑–≤–∞–Ω–∏–µ";
	
//======================================================
//–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
//======================================================

	
//======================================================
//–ó–∞–∫—Ä—ã—Ç—ã–µ –º–µ—Ç–æ–¥—ã
//======================================================
	
//------------------------------------------------------
//–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∫–æ–Ω–∫–∏
//------------------------------------------------------
function getIcon(strSource) {
		
	//–ø—Ä–æ–≤–µ—Ä–∫–∞, –Ω–µ –ø—É—Å—Ç–∞—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
	if (strSource == undefined) {
		return "";
	} else {
		var separator = " ";
		strSource = String(strSource);
		return strSource.split(separator,1)[0];
	}
}
	
//------------------------------------------------------
//–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –±–µ–∑ –∏–∫–æ–Ω–∫–∏
//------------------------------------------------------
function getName(strSource) {
	
	//–ø—Ä–æ–≤–µ—Ä–∫–∞, –Ω–µ –ø—É—Å—Ç–∞—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
	if (strSource == undefined) {
		return "";
	} else {
		var separator = " ";
		strSource = String(strSource);
		var strIcon = strSource.split(separator,1)[0];
		var strName = strSource.slice(strIcon.length);
		return strName = strName.trim();
	}
}
	
//------------------------------------------------------
//–§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –Ω–∞–∑–≤–∞–Ω–∏—è
//------------------------------------------------------
function getPaymentName() {
	
	//—Ç–µ–∫—É—â–∏–π –ø–ª–∞—Ç–µ–∂
	var payment = entry();
	
	//—Å—Å—ã–ª–∫–∏ –Ω–∞ –ø–æ–ª—è
	var FName = payment.field(NAME);
	var FType = String(payment.field(TYPE));
	var ico;
	
	switch (FType) {
		case _TRANSACTION:
			ico = ICO_TRANSACTION;
			break;
		case _INCOME:
			ico = getIcon(payment.field(INCOME_CATEGORY));
			break;
		case _OUTCOME:
			ico = getIcon(payment.field(OUTCOME_CATEGORY));
			break;
		default: 
			ico = "*";
			break;
	}
	
	return ico + " " + FName;
	
}

//------------------------------------------------------
//–§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å—É–º–º—ã
//------------------------------------------------------
function getSum() {
	
	//—Ç–µ–∫—É—â–∏–π –ø–ª–∞—Ç–µ–∂
	var payment = entry();
	
	//—Å—Å—ã–ª–∫–∏ –Ω–∞ –ø–æ–ª—è
	var FType = String(payment.field(TYPE));
	var res = "";
	
	switch (FType) {
		case _TRANSACTION:
			res = ICO_TRANSACTION + payment.field(TRANSACTION);
			break;
		case _INCOME:
			res = ICO_PLUS + payment.field(INCOME);
			break;
		case _OUTCOME:
			res = ICO_MINUS + payment.field(OUTCOME);
			break;
		default: 
			res = null;
			break;
	}
	
	return res;
	
}

//=========================================
//–ò–º–µ–Ω–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫
var nameLibPayments = "–ü–ª–∞—Ç–µ–∂–∏";
//–ò–º–µ–Ω–∞ –ø–æ–ª–µ–π –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ –ê–Ω–∞–ª–∏–∑ —Ä–∞—Å—Ö–æ–¥–æ–≤
var nameStartDate = "–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞";
var nameReport = "–û—Ç—á—ë—Ç";
//–ò–º–µ–Ω–∞ –ø–æ–ª–µ–π –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ –ü–ª–∞—Ç–µ–∂–∏
var nameIncome = "–ü—Ä–∏—Ö–æ–¥";
var nameOutcome = "–†–∞—Å—Ö–æ–¥";
var nameDate = "–î–∞—Ç–∞";
var nameCat = "–ö–∞—Ç–µ–≥–æ—Ä–∏—è";
//–ù–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
var catSalary = "üíµ –∑–∞—Ä–ø–ª–∞—Ç–∞";
var catAdditional = "üí∏ –¥–æ–ø. –¥–æ—Ö–æ–¥";
var catFood = "üçú –ø–∏—Ç–∞–Ω–∏–µ";
var catSocial = "üèòÔ∏è —Å–æ—Ü. —É—Å–ª—É–≥–∏";
var catRest = "üßòüèº‚Äç‚ôÄÔ∏è –¥–æ—Å—É–≥";
var catThings = "üì¶ –≤–µ—â–∏";
var catHealth = "üè• –∑–¥–æ—Ä–æ–≤—å–µ";
var catTransaction = "üí± –ø–µ—Ä–µ–≤–æ–¥";
var catCorrection = "üßÆ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞";
var catEmpty = "üè∑Ô∏è –ø—Ä–æ—á–µ–µ";

//–ë–∏–±–ª–∏–æ—Ç–µ–∫–∏ –∏ –∑–∞–ø–∏—Å–∏
var libAnalytics = lib();
var reports = libAnalytics.entries();
var report = entry();
var libPayments = libByName(nameLibPayments);
var payments = libPayments.entries();

//–ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å
var dteStartDate = report.field(nameStartDate);

//=========================================
//–ü—É—Å—Ç –ª–∏ –º–∞—Å—Å–∏–≤
function isEmpty(arrEntries) {
if (arrEntries.length == 0) {
 return true;} else {
 return false;
}//if
}//function isEmpty

//-----------------------------------------
function¬†formatMoney(n) {

var sign = "";

if (n<0) {
sign = "-";
n = Math.abs(n);
n = n.toFixed(2);
}

n +=¬†"";
n =¬†new¬†Array(4 - n.length % 3).join("U") + n;
n = n.replace(/([0-9U]{3})/g,¬†"$1 ").replace(/U/g,¬†"");
n = sign + n;
return n;
}
//-----------------------------------------
//–ë–∞–ª–∞–Ω—Å –∑–∞ –ø–µ—Ä–∏–æ–¥
function totalBalance(dteDate) {

//–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
var balancePlus = 0;
var balanceMinus = 0;

for (i=0; i<payments.length; i++) {

var dte = payments[i].field(nameDate);

if(dte.getFullYear()==dteDate.getFullYear() && dte.getMonth()==dteDate.getMonth() && payments[i].field(nameCat) != catTransaction){
balancePlus = balancePlus + payments[i].field(nameIncome);
balanceMinus = balanceMinus + payments[i].field(nameOutcome);
}//if
}//for

balanceTotal = balancePlus-balanceMinus;
balanceTotal = balanceTotal.toFixed(2);
balancePlus = balancePlus.toFixed(2);
balanceMinus = balanceMinus.toFixed(2);

var result = Array(balanceTotal, balancePlus, balanceMinus);

return result;

}//function totalbalance

//-----------------------------------------
//–ë–∞–ª–∞–Ω—Å –∑–∞ –ø–µ—Ä–∏–æ–¥
function catBalance(dteDate, cat) {

//–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
var balancePlus = 0;
var balanceMinus = 0;

for (i=0; i<payments.length; i++) {

var dte = payments[i].field(nameDate);

if(dte.getFullYear()==dteDate.getFullYear() && dte.getMonth()==dteDate.getMonth() && payments[i].field(nameCat) == cat){
balancePlus = balancePlus + payments[i].field(nameIncome);
balanceMinus = balanceMinus + payments[i].field(nameOutcome);
}//if
}//for

balanceTotal = balancePlus-balanceMinus;
balanceTotal = formatMoney(balanceTotal.toFixed(2));
balancePlus = formatMoney(balancePlus.toFixed(2));
balanceMinus = formatMoney(balanceMinus.toFixed(2));

var result = Array(balanceTotal, balancePlus, balanceMinus);

return result;

}//function catBalance
//=========================================
if (!isEmpty(payments)) {

var total = totalBalance(dteStartDate);
var totalSalary = catBalance(dteStartDate, catSalary);
var totalAdditional = catBalance(dteStartDate,catAdditional);
var totalFood = catBalance(dteStartDate, catFood);
var totalSocial = catBalance(dteStartDate, catSocial);
var totalRest = catBalance(dteStartDate, catRest);
var totalThings = catBalance(dteStartDate, catThings);
var totalHealth = catBalance(dteStartDate, catHealth);
var totalCorrection = catBalance(dteStartDate, catCorrection);
var totalEmpty = catBalance(dteStartDate, catEmpty);

report.set(nameReport, "–ë–∞–ª–∞–Ω—Å: " + total[0] + "\n–ü—Ä–∏—Ö–æ–¥: " + total[1] + "\n–†–∞—Å—Ö–æ–¥: " + total[2] + "\n\n–ó–∞—Ä–ø–ª–∞—Ç–∞: " + totalSalary[1] + "\n–î–æ–ø. –¥–æ—Ö–æ–¥: " + totalAdditional[1] + "\n–ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞: " + totalCorrection[1] + "\n\n–ü–∏—Ç–∞–Ω–∏–µ: " + totalFood[2] + "\n–°–æ—Ü. —É—Å–ª—É–≥–∏: " + totalSocial[2] + "\n–î–æ—Å—É–≥: " + totalRest[2] + "\n–í–µ—â–∏: " + totalThings[2] + "\n–ó–¥–æ—Ä–æ–≤—å–µ: " + totalHealth[2] + "\n–ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞: " + totalCorrection[2] + "\n–ü—Ä–æ—á–µ–µ: " + totalEmpty[2]);

report.set("–í—ã–≤–æ–¥ –±–∞–ª–∞–Ω—Å–∞", "üí≤" + formatMoney(total[0]));
report.set("–í—ã–≤–æ–¥ –ø—Ä–∏—Ö–æ–¥–∞", "‚ûï" + formatMoney(total[1]));
report.set("–í—ã–≤–æ–¥ —Ä–∞—Å—Ö–æ–¥–∞", "‚ûñ" + formatMoney(total[2]));
report.set("–ë–∞–ª–∞–Ω—Å", total[0]);
report.set("–ü—Ä–∏—Ö–æ–¥", total[1]);
report.set("–†–∞—Å—Ö–æ–¥", total[2]);
}//if –µ—Å–ª–∏ –Ω–µ –ø—É—Å—Ç–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π

