//**********************************************************
//**********************************************************
"use strict";

//**********************************************************

//======================================================
//–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
//======================================================

//–ò–∫–æ–Ω–∫–∏ —Ç–∏–ø–∞
const ICO_PLUS = "‚ûï";
const ICO_MINUS = "‚ûñ";
const ICO_TRANSACTION = "üí±";

//–ò–∫–æ–Ω–∫–∏ –ø—Ä–∏—Ö–æ–¥–∞
const ICO_SALARY = "üíµ";
const ICO_ADD_INCOME = "üí∏";

//–ò–∫–æ–Ω–∫–∏ —Ä–∞—Å—Ö–æ–¥–∞
const ICO_FOOD = "üçú";
const ICO_SERVICE = "üè†";
const ICO_TRANSPORT = "üöå";
const ICO_REST = "üßòüèº‚Äç‚ôÄÔ∏è";
const ICO_THINGS = "üì¶";
const ICO_HEALTH = "üè•";

//–û–±—â–∏–µ –∏–∫–æ–Ω–∫–∏ –ø—Ä–∏—Ö–æ–¥–∞ –∏ —Ä–∞—Å—Ö–æ–¥–∞
const ICO_CORRECTION = "üßÆ";
const ICO_OTHER = "üè∑Ô∏è";

//–ò–º–µ–Ω–∞ –ø–æ–ª–µ–π –∏ –∑–Ω–∞—á–µ–Ω–∏—è
const DATE = "–î–∞—Ç–∞";
const TYPE = "–¢–∏–ø";
	const _INCOME = ICO_PLUS + " –ø—Ä–∏—Ö–æ–¥";
	const _OUTCOME = ICO_MINUS + " —Ä–∞—Å—Ö–æ–¥";
	const _TRANSACTION = ICO_TRANSACTION + " –ø–µ—Ä–µ–≤–æ–¥";
const ACCOUNT = "–°—á—ë—Ç";
const DESTINATION = "–ü–µ—Ä–µ–≤–µ–ª–µ–Ω–æ –Ω–∞";	

const INCOME_CATEGORY = "–ö–∞—Ç–µ–≥–æ—Ä–∏—è " + ICO_PLUS;
	const _SALARY = ICO_SALARY + " –∑–∞—Ä–ø–ª–∞—Ç–∞";
	const _ADD_INCOME = ICO_ADD_INCOME + " –¥–æ–ø.–¥–æ—Ö–æ–¥";
const INCOME = "–ü—Ä–∏—Ö–æ–¥";

const OUTCOME_CATEGORY = "–ö–∞—Ç–µ–≥–æ—Ä–∏—è " + ICO_MINUS;
	const FOOD = ICO_FOOD + " –ø–∏—Ç–∞–Ω–∏–µ";
	const _SERVICE = ICO_SERVICE + " —Å–æ—Ü.—É—Å–ª—É–≥–∏";
	const _TRANSPORT = ICO_TRANSPORT + " —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç";
	const _REST = ICO_REST + " –¥–æ—Å—É–≥";
	const _THINGS = ICO_THINGS + " –≤–µ—â–∏";
	const _HEALTH = ICO_HEALTH + " –∑–¥–æ—Ä–æ–≤—å–µ";
const OUTCOME = "–†–∞—Å—Ö–æ–¥";

	const _CORRECTION = ICO_CORRECTION + " –∫–æ—Ä—Ä–µ–∫—Ç.";
	const _OTHER = ICO_OTHER + " –ø—Ä–æ—á–µ–µ";

const TRANSACTION = "–°—É–º–º–∞ –ø–µ—Ä–µ–≤–æ–¥–∞";
const NAME = "–ù–∞–∑–≤–∞–Ω–∏–µ";
	
//======================================================
//–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
//======================================================

	
//======================================================
//–ó–∞–∫—Ä—ã—Ç—ã–µ –º–µ—Ç–æ–¥—ã
//======================================================
	
//------------------------------------------------------
//–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∫–æ–Ω–∫–∏
//------------------------------------------------------
function getIcon(strSource) {
		
	//–ø—Ä–æ–≤–µ—Ä–∫–∞, –Ω–µ –ø—É—Å—Ç–∞—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
	if (strSource == undefined) {
		return "";
	} else {
		var separator = " ";
		strSource = String(strSource);
		return strSource.split(separator,1)[0];
	}
}
	
//------------------------------------------------------
//–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –±–µ–∑ –∏–∫–æ–Ω–∫–∏
//------------------------------------------------------
function getName(strSource) {
	
	//–ø—Ä–æ–≤–µ—Ä–∫–∞, –Ω–µ –ø—É—Å—Ç–∞—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
	if (strSource == undefined) {
		return "";
	} else {
		var separator = " ";
		strSource = String(strSource);
		var strIcon = strSource.split(separator,1)[0];
		var strName = strSource.slice(strIcon.length);
		return strName = strName.trim();
	}
}

//------------------------------------------------------
//–§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—É–º–º—ã
//------------------------------------------------------
function formatMoney(n) {

	var sign = "";

	if (n < 0) {
		sign = "-";
		n = Math.abs(n);
		n = n.toFixed(2);
	}

	n +=¬†"";
	n =¬†new¬†Array(4 - n.length % 3).join("U") + n;
	n = n.replace(/([0-9U]{3})/g,¬†"$1 ").replace(/U/g,¬†"");
	n = sign + n;
	
	return n;
	
}	

//------------------------------------------------------
//–§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –Ω–∞–∑–≤–∞–Ω–∏—è
//------------------------------------------------------
function getPaymentName() {
	
	//—Ç–µ–∫—É—â–∏–π –ø–ª–∞—Ç–µ–∂
	var payment = entry();
	
	//—Å—Å—ã–ª–∫–∏ –Ω–∞ –ø–æ–ª—è
	var FName = payment.field(NAME);
	var FType = String(payment.field(TYPE));
	var ico;
	
	switch (FType) {
		case _TRANSACTION:
			ico = ICO_TRANSACTION;
			break;
		case _INCOME:
			ico = getIcon(payment.field(INCOME_CATEGORY));
			break;
		case _OUTCOME:
			ico = getIcon(payment.field(OUTCOME_CATEGORY));
			break;
		default: 
			ico = "*";
			break;
	}
	
	return ico + " " + FName;
	
}

//------------------------------------------------------
//–§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å—É–º–º—ã
//------------------------------------------------------
function getSum() {
	
	//—Ç–µ–∫—É—â–∏–π –ø–ª–∞—Ç–µ–∂
	var payment = entry();
	
	//—Å—Å—ã–ª–∫–∏ –Ω–∞ –ø–æ–ª—è
	var FType = String(payment.field(TYPE));
	var res = "";
	var rub = "—Ä."
	
	switch (FType) {
		case _TRANSACTION:
			res = ICO_TRANSACTION + formatMoney(payment.field(TRANSACTION)) + rub;
			break;
		case _INCOME:
			res = ICO_PLUS + formatMoney(payment.field(INCOME)) + rub;
			break;
		case _OUTCOME:
			res = ICO_MINUS + formatMoney(payment.field(OUTCOME)) + rub;
			break;
		default: 
			res = null;
			break;
	}
	
	return res;
	
}
