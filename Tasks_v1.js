//**********************************************************
//**********************************************************
"use strict";

//**********************************************************

//======================================================
//–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
//======================================================

//–ò–∫–æ–Ω–∫–∏
const ICO_WARNING = "‚ö†Ô∏è";
const ICO_SUCSEED = "‚úîÔ∏è";
const ICO_PERIOD = "üóìÔ∏è";
const ICO_PLAN = "‚è≥";
const ICO_DONE = "‚úîÔ∏è";
const ICO_URGENT = "üî•";
const ICO_SOON = "‚è±Ô∏è";
	
//–ò–º–µ–Ω–∞ –ø–æ–ª–µ–π –∏ –∑–Ω–∞—á–µ–Ω–∏—è
const TYPE = "–¢–∏–ø";
	const _PERIOD = "–ø–æ–≤—Ç–æ—Ä.";
const STATUS = "–°—Ç–∞—Ç—É—Å";
	const _ACTIVE = "–∞–∫—Ç–∏–≤–Ω–æ";
	const _WAITING = "–æ–∂–∏–¥–∞–Ω–∏–µ";
	const _DONE = "–∑–∞–≤–µ—Ä—à–µ–Ω–æ";
const SUM = "–°—É–º–º–∞";
const START_DATE = "–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞";
const START_TIME = "–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞";
const END_DATE = "–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è";
const END_TIME = "–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è";
const NAME = "–ù–∞–∑–≤–∞–Ω–∏–µ";
const COUNT = "–í—ã—á–∏—Å–ª—è—Ç—å –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å";
const UNIT = "–ï–¥.–∏–∑–º–µ—Ä–µ–Ω–∏—è";
	const _DAY = "–¥–µ–Ω—å";
	const _WEEK = "–Ω–µ–¥–µ–ª—è";
	const _MONTH = "–º–µ—Å—è—Ü";
	const _YEAR = "–≥–æ–¥";
const AUTO = "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –º–µ–Ω—è—Ç—å –¥–∞—Ç—É";
const INTERVAL = "–ò–Ω—Ç–µ—Ä–≤–∞–ª";
	
//======================================================
//–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
//======================================================
	
//–°–æ–æ–±—â–µ–Ω–∏—è
var msgCorrected = ICO_WARNING + " –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ:";
var msgPeriodOff = ICO_WARNING + " –ü–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å –Ω–µ –≤–∫–ª—é—á–µ–Ω–∞";
	
//======================================================
//–ó–∞–∫—Ä—ã—Ç—ã–µ –º–µ—Ç–æ–¥—ã
//======================================================
	
//------------------------------------------------------
//–§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ü–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–ª–µ–π
//------------------------------------------------------
function checkTask(incomeTask) {
	
	sSrc = "checkTask(incomeTask)";
	log(Edit.createLogMsg(sSrc, "—Å—Ç–∞—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–∏"));
		
	//–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º–æ–µ –¥–µ–ª–æ
	var task;
		
	//–ï—Å–ª–∏ –µ—Å—Ç—å –≤—Ö–æ–¥—è—â–∏–π –æ–±—ä–µ–∫—Ç, —Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
	if (incomeTask == undefined) {
		task = entry();
		log(Edit.createLogMsg(sSrc, "—Ç–µ–∫—É—â–∞—è –∑–∞–¥–∞—á–∞: " + task.title));
	} else {
		task = incomeTask;
		log(Edit.createLogMsg(sSrc, "–≤—Ö–æ–¥—è—â–∞—è –∑–∞–¥–∞—á–∞: " + task.title));
	}
		
	//–ö–æ—Ä–æ—Ç–∫–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø–æ–ª—è
	var FType = task.field (TYPE);
	var FStatus = task.field (STATUS);
	var FStartDate = task.field (START_DATE);
	var FStartTime = task.field (START_TIME);
	var FEndDate = task.field (END_DATE);
	var FEndTime = task.field (END_TIME);
	var FCount = task.field (COUNT);
	var FAuto = task.field (AUTO);
	var FInterval = task.field (INTERVAL);
		
	//–ø—Ä–æ—á–µ–µ
	var bEndDate = false;
	var bStartTime = false;
	var bEndTime = false;
	var strResult = msgCorrected;

	//–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Ç–∏–ø–∞ –∏ —Å—Ç–∞—Ç—É—Å–∞
	if (FType==_PERIOD && FStatus==_DONE) {
		task.set(STATUS, _ACTIVE);
		strResult = strResult + "\n*" + STATUS;
	}
		
	//–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –∏ –¥–∞—Ç –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ
	if (FEndDate == undefined) {bEndDate = false;} else {bEndDate = true;}
	if (FStartTime == undefined) {bStartTime = false;} else {bStartTime = true;}
	if (FEndTime == undefined) {bEndTime = false;} else {bEndTime = true;}

	//–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞—Ç—ã –æ–∫–æ–Ω—á–∞–Ω–∏—è
	if (bEndDate) {
		if (FEndDate<FStartDate) {
			task.set(END_DATE, FStartDate);
			FEndDate = task.field (END_DATE);
			strResult = strResult + "\n*" + END_DATE;
		}
	} else {
		if (bEndTime) {
			task.set(END_DATE, FStartDate);
			FEndDate = task.field (END_DATE);
			strResult = strResult + "\n*" + END_DATE;
		}
	}

	//–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞—á–∞–ª–∞
	if (!bStartTime) {
		if(bEndTime) {
			task.set(START_TIME, FEndTime);
			FStartTime = task.field (START_TIME);
			strResult = strResult + "\n*" + START_TIME;
		}
	}

	//–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
	if (bEndTime) {
		if (FEndDate.getFullYear()==FStartDate.getFullYear() && 
		FEndDate.getMonth()==FStartDate.getMonth() && 
		FEndDate.getDate()==FStartDate.getDate() &&
		FEndTime < FStartTime) {
			task.set(END_TIME, FStartTime);
			strResult = strResult + "\n*" + END_TIME;
		}
	}

	//–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –ø–µ—Ä–µ–æ–¥–∏—á–Ω–æ—Å—Ç–∏ –∏ —Å–º–µ–Ω—ã –¥–∞—Ç
	if (FType!=_PERIOD && FCount==1) {
		task.set(COUNT, 0);
		strResult = strResult + "\n*" + COUNT;
	}


	//–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
	if (FInterval!=undefined && FInterval<0) {
		task.set(INTERVAL, Math.abs(FInterval));
		strResult = strResult + "\n*" + INTERVAL;
	}

	task.recalc();

	if (strResult!=msgCorrected) {
		message(strResult);	
	}
}

//----------------------------------------------------------
//–§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–Ω–æ—Å–∞ –¥–∞—Ç—ã –≤–ø–µ—Ä–µ–¥ –∏–ª–∏ –Ω–∞–∑–∞–¥
//----------------------------------------------------------
function shiftDate(bForward, incomeTask) {
	
	sSrc = "shiftDate(bForward, incomeTask)";
	log(Edit.createLogMsg(sSrc, "—Å—Ç–∞—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–∏"));
	
	//–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Å–º–µ–Ω–µ –¥–∞—Ç—ã
	var bShowMessage = true;

	//–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º–æ–µ –¥–µ–ª–æ
	var task;
		
	//–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Å–º–µ–Ω–µ –¥–∞—Ç—ã
	var bShowMessage = true;
		
	//–ï—Å–ª–∏ –µ—Å—Ç—å –≤—Ö–æ–¥—è—â–∏–π –æ–±—ä–µ–∫—Ç, —Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
	if (incomeTask == undefined) {
		task = entry();
		log(Edit.createLogMsg(sSrc, "—Ç–µ–∫—É—â–∞—è –∑–∞–¥–∞—á–∞: " + task.title));
	} else {
		task = incomeTask;
		bShowMessage = false;
		log(Edit.createLogMsg(sSrc, "–≤—Ö–æ–¥—è—â–∞—è –∑–∞–¥–∞—á–∞: " + task.title));
	}
	
	//–í—ã—Ö–æ–¥, –µ—Å–ª–∏ –Ω–µ –≤–∫–ª—é—á–µ–Ω —Å—á—ë—Ç –ø–µ—Ä–µ–æ–¥–∏—á–Ω–æ—Å—Ç–∏
	if (!task.field(COUNT)) {
		message(msgPeriodOff);
		exit();
	}
		
	//–ö–æ—Ä–æ—Ç–∫–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø–æ–ª—è
	var FStartDate = task.field(START_DATE);
	var FEndDate = task.field(END_DATE);
	var FUnit = task.field(UNIT);
	var FInterval = task.field(INTERVAL);
		
	task.set(START_DATE, Edit.shiftDate(FStartDate, FInterval, FUnit, bForward));
	if (FEndDate != undefined) {
		task.set(END_DATE, Edit.shiftDate(FEndDate, FInterval, FUnit, bForward));
	}

	var direction;
	if (bForward != false) {direction = 1;} else {direction = -1;}
	
	if (bShowMessage) {
		message(ICO_SUCSEED + " –ü–µ—Ä–µ–Ω–µ—Å–µ–Ω–æ –Ω–∞ " + direction*FInterval + " (" + FUnit + ")");
	}

	//–õ–æ–≥
	log(Edit.createLogMsg(sSrc, "—Å–¥–≤–∏–≥: " + direction*FInterval + " (" + FUnit + ")"));
		
	}

//----------------------------------------------------------
//–§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑—ã–≤–∞—é—â–∞—è –æ—Å—Ç–∞—Ç–æ–∫ –¥–Ω–µ–π
//----------------------------------------------------------
function daysLeft() {
	
	//–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º–æ–µ –¥–µ–ª–æ
	var task = entry();
	
	//–ö–æ—Ä–æ—Ç–∫–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø–æ–ª—è
	var FStartDate = task.field (START_DATE);
	var FStatus = task.field (STATUS);
	
	//–ü—Ä–æ—á–µ–µ
	var res = " –¥–Ω.";	
	var dteDiff = Edit.daysLeft(FStartDate)Ôºõ
	if (dteDiff == 0) {dteDiff = Math.abs(dteDiff);}
	
	if (dteDiff<=3 && FStatus!=_DONE) {
		res = ICO_URGENT + dteDiff + res;
	} else if (dteDiff>3 && dteDiff<=7 && FStatus!=_DONE) {
		res = ICO_SOON + dteDiff + res;
	} else {
		res = dteDiff + res;
	}
	
	return res;
		
}
	
//----------------------------------------------------------
//–§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ç–∏–ø–∞
//----------------------------------------------------------
function getTaskType() {
	//–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º–æ–µ –¥–µ–ª–æ
	var task = entry();
	//–ü–æ–ª—è
	var FType = task.field (TYPE);
	return Edit.getIcon(FType);
}
	
//----------------------------------------------------------
//–§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å—Ç–∞—Ç—É—Å–∞
//----------------------------------------------------------
function getSum() {
	//–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º–æ–µ –¥–µ–ª–æ
	var task = entry();
	//–ü–æ–ª—è
	var FSum = task.field (SUM);
	return Edit.getMoney = function (FSum, "—Ä.");
}
