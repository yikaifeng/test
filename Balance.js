//**********************************************************
"use strict";
//**********************************************************

//======================================================
//–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
//======================================================

//–ò–∫–æ–Ω–∫–∏
//–ò–∫–æ–Ω–∫–∏ —Ç–∏–ø–∞
const ICO_PLUS = "‚ûï";
const ICO_MINUS = "‚ûñ";
const ICO_TRANSACTION = "üí±";
	
//–ò–º–µ–Ω–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫
const LIB_PAYMENTS = "–ü–ª–∞—Ç–µ–∂–∏2";	
	
//–ò–º–µ–Ω–∞ –ø–æ–ª–µ–π –∏ –∑–Ω–∞—á–µ–Ω–∏—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –°—á–µ—Ç–∞
const ACCOUNT_NAME = "–ù–∞–∑–≤–∞–Ω–∏–µ";
const BALANCE = "–ë–∞–ª–∞–Ω—Å2";

//–ò–º–µ–Ω–∞ –ø–æ–ª–µ–π –∏ –∑–Ω–∞—á–µ–Ω–∏—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –ü–ª–∞—Ç–µ–∂–∏2
const ACCOUNT = "–°—á—ë—Ç";
const TYPE = "–¢–∏–ø";
	const _INCOME = ICO_PLUS + " –ø—Ä–∏—Ö–æ–¥";
	const _OUTCOME = ICO_MINUS + " —Ä–∞—Å—Ö–æ–¥";
	const _TRANSACTION = ICO_TRANSACTION + " –ø–µ—Ä–µ–≤–æ–¥";

const INCOME = "–ü—Ä–∏—Ö–æ–¥";
const OUTCOME = "–†–∞—Å—Ö–æ–¥";
const TRANSACTION = "–°—É–º–º–∞ –ø–µ—Ä–µ–≤–æ–¥–∞";	
//======================================================
//–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
//======================================================
	
//–°–æ–æ–±—â–µ–Ω–∏—è
//var msgCorrected = ICO_WARNING + " –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ:";
//var msgPeriodOff = ICO_WARNING + " –ü–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å –Ω–µ –≤–∫–ª—é—á–µ–Ω–∞";
	
//======================================================
//–ú–µ—Ç–æ–¥—ã
//======================================================
	
//------------------------------------------------------
//–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∫–æ–Ω–∫–∏
//------------------------------------------------------
function getIcon(strSource) {
		
	//–ø—Ä–æ–≤–µ—Ä–∫–∞, –Ω–µ –ø—É—Å—Ç–∞—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
	if (strSource == undefined) {
		return "";
	} else {
		var separator = " ";
		strSource = String(strSource);
		return strSource.split(separator,1)[0];
	}
}
	
//------------------------------------------------------
//–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –±–µ–∑ –∏–∫–æ–Ω–∫–∏
//------------------------------------------------------
function getName(strSource) {
	
	//–ø—Ä–æ–≤–µ—Ä–∫–∞, –Ω–µ –ø—É—Å—Ç–∞—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
	if (strSource == undefined) {
		return "";
	} else {
		var separator = " ";
		strSource = String(strSource);
		var strIcon = strSource.split(separator,1)[0];
		var strName = strSource.slice(strIcon.length);
		return strName = strName.trim();
	}
}

//------------------------------------------------------
//–§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
//------------------------------------------------------
	
function refresh() {

	var libAccounts = lib();
	var accounts = libAccounts.entries();
	
	log("\nREFRESH()\n" + lib.title + " " + accounts.length + " –∑–∞–ø–∏—Å–µ–π");
	
	//–í—ã–ø–æ–ª–Ω—è–µ–º, –µ—Å–ª–∏ –µ—Å—Ç—å —Å—á–µ—Ç–∞
	if (accounts.length >0) {
		
		//–ø–µ—Ä–µ–±–æ—Ä —Å—á–µ—Ç–æ–≤
		for (var j = 0; j<accounts.length; j++) {
			
			log("\nACCOUNT[" + j + "] " + accounts[j].field(ACCOUNT_NAME));
			
			var income = 0;
			var outcome = 0;
			var account = accounts[j];
			var libPayments = libByName(LIB_PAYMENTS);
			var payments = libPayments.linksTo(account);
			
			log("\n  THERA ARE PAYMENTS: " + payments.length);
			
			//–µ—Å–ª–∏ –µ—Å—Ç—å –ø–ª–∞—Ç–µ–∂–∏ –ø–æ —Ç–µ–∫—É—â–µ–º—É —Å—á—ë—Ç—É
			if (payments.length >0) {
				
				//–ø–µ—Ä–µ–±–æ—Ä –ø–ª–∞—Ç–µ–∂–µ–π
				for (var i =0; i < payments.length; i++){
					
					var FType = payments[i].field(TYPE);
					
					switch (FType) {
						case _TRANSACTION:
							//–ø–æ–ª—É—á–∞–µ–º —Å—á—ë—Ç –∏–∑ –ø–æ–ª—è "—Å—á—ë—Ç" —Ç–µ–∫—É—â–µ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
							log("\nTRANSACTION: " + payments[i].field(ACCOUNT_NAME));
							
							var account1 = payments[i].field(ACCOUNT);
							
							if(account[i].id == account1.id) {
								income = payments[i].field(INCOME) + income;
							} else {
								outcome = payments[i].field(OUTCOME) + outcome;
							}
							
							break;
						case _INCOME:
							income = payments[i].field(INCOME) + income;
							break;
						case _OUTCOME:
							outcome = payments[i].field(OUTCOME) + outcome;
							break;
						default: 
							break;
					}
				} 
				
				account.set("–ë–∞–ª–∞–Ω—Å2",income - outcome);
				
			} 
		} 
	} 

	message ("–ë–∞–ª–∞–Ω—Å2 –æ–±–Ω–æ–≤–ª—ë–Ω");

}
